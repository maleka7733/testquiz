steps:
  # Build and push the backend image using Kaniko
  - name: "gcr.io/kaniko-project/executor:latest"
    args:
      - "--destination=gcr.io/$PROJECT_ID/backend:test"
      - "--context=dir://backend"
      - "--dockerfile=backend/Dockerfile"
      - "--cache=true"

  # Build and push the frontend image using Kaniko
  - name: "gcr.io/kaniko-project/executor:latest"
    args:
      - "--destination=gcr.io/$PROJECT_ID/frontend:test"
      - "--context=dir://frontend"
      - "--dockerfile=frontend/Dockerfile"
      - "--cache=true"

  # Apply Kubernetes configurations
  - name: "gcr.io/cloud-builders/kubectl"
    args: ["apply", "-f", "k8-backend.yaml"]
    env:
      - "CLOUDSDK_COMPUTE_ZONE=australia-southeast2"
      - "CLOUDSDK_CONTAINER_CLUSTER=quizspark-cluster"

  - name: "gcr.io/cloud-builders/kubectl"
    args: ["apply", "-f", "k8-frontend.yaml"]
    env:
      - "CLOUDSDK_COMPUTE_ZONE=australia-southeast2"
      - "CLOUDSDK_CONTAINER_CLUSTER=quizspark-cluster"

  - name: "gcr.io/cloud-builders/kubectl"
    args: ["apply", "-f", "k8-frontend-service.yaml"]
    env:
      - "CLOUDSDK_COMPUTE_ZONE=australia-southeast2"
      - "CLOUDSDK_CONTAINER_CLUSTER=quizspark-cluster"

  - name: "gcr.io/cloud-builders/kubectl"
    args: ["apply", "-f", "k8-mongo.yaml"]
    env:
      - "CLOUDSDK_COMPUTE_ZONE=australia-southeast2"
      - "CLOUDSDK_CONTAINER_CLUSTER=quizspark-cluster"

timeout: "1600s"
